global
        log /dev/log    local0
        log /dev/log    local1 notice
        # We're running haproxy in a chroot environment
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

# generated 2021-05-19, Mozilla Guideline v5.6, HAProxy 2.0.13, OpenSSL 1.1.1f, intermediate configuration
# https://ssl-config.mozilla.org/#server=haproxy&version=2.0.13&config=intermediate&openssl=1.1.1f&guideline=5.6
    # intermediate configuration
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options prefer-client-ciphers no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

    ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

    # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /etc/haproxy/ffdhe2048.txt
    ssl-dh-param-file /etc/haproxy/ffdhe2048.txt

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        # Some basic timeouts for our server
        timeout connect 600s
        timeout client 1h
        timeout server 1h
        timeout client-fin 30s

backend ebw
        timeout tunnel 10h
        server ebw 127.0.0.1:8080

backend certbot
        server certbot 127.0.0.1:8888

frontend http
        bind *:80
        mode http
        # Allow the certbot plugin to handle acme challenges
        acl url_acme_http01 path_beg /.well-known/acme-challenge/
        use_backend certbot if METH_GET url_acme_http01
        # Otherwise, redirect the user to https
        redirect scheme https code 301
        default_backend ebw

frontend https
        # Use SSL with the cert location used by certbot
        bind *:443 ssl crt /etc/letsencrypt/live/{{fqdn}}/haproxy.pem alpn h2,http/1.1
        reqadd X-Forwarded-Proto:\ https
        default_backend ebw


        # HSTS (63072000 seconds)
        http-response set-header Strict-Transport-Security max-age=63072000
        redirect scheme https code 301 if !{ ssl_fc }
